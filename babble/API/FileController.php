<?php

namespace Babble\API;

use JsonSerializable;
use Symfony\Component\Finder\Finder;
use Symfony\Component\Finder\SplFileInfo;
use Symfony\Component\HttpFoundation\Request;

class File implements JsonSerializable
{
    private $file;

    public function __construct(SplFileInfo $file)
    {
        $this->file = $file;
    }

    function jsonSerialize()
    {
        $file = $this->file;
        return [
            'name' => $file->getFilename(),
            'type' => $file->getType(),
            'mtime' => $file->getMTime(),
            'size' => $file->getSize(),
        ];
    }
}

class FileController extends Controller
{
    public function create(Request $request, $path)
    {
        var_dump($path);
        $files = $request->files->all();
        if (count($files) > 0) {
            $targetDir = './uploads/' . $path;
            foreach ($files as $file) {
                $file->move($targetDir);
            }
        } else {
            // Handle folder creation.
        }
    }

    public function read(Request $request, $path)
    {
        if (strpos($path, '..') !== false) return;

        $finder = new Finder();

        if (!$path) $path = '';
        $files = $finder
            ->notName('_*')
            ->in('../public/uploads/' . $path)
            ->depth(0);

        $filenames = [];
        foreach ($files as $file) {
            $filenames[] = new File($file);
        }

        error_log('ok');

        return json_encode($filenames);
    }

    public function update(Request $request, $id)
    {
        parent::update($request, $id); // TODO: Change the autogenerated stub
    }

    public function delete(Request $request, $id)
    {
        parent::delete($request, $id); // TODO: Change the autogenerated stub
    }

}